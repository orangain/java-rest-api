<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sqlmapper.CustomerMapper">
	<select id="selectCustomer" parameterType="com.example.dto.Customer" resultMap="customerResultMap">
		SELECT
			c.customer_id,
			c.store_id,
			c.first_name,
			c.last_name,
			c.email,
			c.active,
			c.create_date,
			c.last_update AS customer_last_update,
			a.address_id,
			a.address,
			a.address2,
			a.district,
			a.last_update AS address_last_update,
			r.rental_id,
			r.rental_date,
			r.inventory_id,
			r.return_date,
			r.staff_id,
			r.last_update AS rental_last_update
		FROM customer AS c
		LEFT JOIN address AS a ON c.address_id = a.address_id
		LEFT JOIN rental AS r ON c.customer_id = r.customer_id
		<where>
			<if test="customerId != null">
				AND c.customer_id = #{customerId}
			</if>
	    </where>
	    ORDER BY c.customer_id, r.rental_id
	</select>

	<resultMap id="customerResultMap" type="com.example.dto.Customer">
		<id property="customerId" column="customer_id" />
		<result property="storeId" column="store_id" />
		<result property="firstName" column="first_name" />
		<result property="lastName" column="last_name" />
		<result property="email" column="email" />
		<result property="active" column="active" />
		<result property="createDate" column="create_date" />
		<result property="lastUpdate" column="customer_last_update" />
		<association property="address" javaType="com.example.dto.Address">
			<id property="addressId" column="address_id" />
			<result property="address" column="address" />
			<result property="address2" column="address2" />
			<result property="district" column="district" />
			<result property="lastUpdate" column="address_last_update" />
		</association>
		<collection property="rentals" ofType="com.example.dto.Rental" notNullColumn="rental_id">
			<id property="rentalId" column="rental_id" />
			<result property="rentalDate" column="rental_date" />
			<result property="inventoryId" column="inventory_id" />
			<result property="customerId" column="customer_id" />
			<result property="returnDate" column="return_date" />
			<result property="staffId" column="staff_id" />
			<result property="lastUpdate" column="rental_last_update" />
		</collection>
	</resultMap>
	
	<insert id="insertCustomer" parameterType="com.example.dto.Customer" useGeneratedKeys="true" keyProperty="customerId">
		INSERT INTO customer
			(store_id, first_name, last_name, email, address_id, active, create_date, last_update)
		VALUES
			(#{storeId}, #{firstName}, #{lastName}, #{email}, #{address.addressId}, #{active}, #{createDate}, #{lastUpdate})
	</insert>

	<update id="updateCustomer" parameterType="com.example.dto.Customer">
		UPDATE customer
		<set>
			<if test="storeId != null">store_id = #{storeId},</if>
			<if test="firstName != null">first_name = #{firstName},</if>
			<if test="lastName != null">last_name = #{lastName},</if>
			<if test="email != null">email = #{email},</if>
			<if test="address != null &amp;&amp; address.addressId != null">address_id = #{address.addressId},</if>
			<if test="active != null">active = #{active},</if>
			<if test="createDate != null">create_date = #{createDate},</if>
			<if test="lastUpdate != null">last_update = #{lastUpdate},</if>
		</set>
		<where>
			customer_id = #{customerId}
		</where>
		LIMIT 1
	</update>

	<delete id="deleteCustomer">
		DELETE FROM customer WHERE customer_id = #{customerId} LIMIT 1
	</delete>
</mapper>
